Description: >
  UdaPeople backend stack.

Parameters:
  ID:
    Description: Unique identifier.
    Type: String
    Default: "1"

Resources:
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub UdaPeople-${ID}
      GroupDescription: Allow port 22, 9100, and port 3030.
      VpcId: vpc-b4afc2c9 # TO DO: Parameterize!
      # What inbound traffic is allowed
      SecurityGroupIngress:
        - IpProtocol: tcp # admin ssh
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3030 # port for udapeople App
          ToPort: 3030
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 9100 # port for node exporter
          ToPort: 9100
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5432 # port for postgres database connection
          ToPort: 5432
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      # What outbound traffic is allowed
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5432 # port for postgres database connection
          ToPort: 5432
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 9093 # port for postgres database connection
          ToPort: 9093
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 9090 # port for postgres database connection
          ToPort: 9090
          CidrIp: 0.0.0.0/0

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.small #Originally t2.micro
      SubnetId: subnet-716a3550 # TO DO: Parameterize
      SecurityGroupIds:
        - Ref: InstanceSecurityGroup
      KeyName: udacity-project3-key # If you use another key pair name, you should change this value to match.
      # If this ami id is not available for you, you can find another (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html)
      # Ubuntu 18 or higher works fine
      ImageId: ami-09e67e426f25ce0d7 #ami-0747bdcabd34c712a #ami-00ddb0e5626798373 
      Tags:
        - Key: Name
          Value: !Sub backend-${ID}
        - Key: project
          Value: udacity-project3-backend

  AssociateBackendElasticIP:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: eipalloc-06ddec8f5cc5d63a3
      InstanceId: !Ref EC2Instance

Outputs:
  BackendURL:
    Description: The backend DNS (host name)
    Value: !Join ["", ["http://", !GetAtt EC2Instance.PublicDnsName]]
    Export:
      Name: !Sub BackendURL-${ID}